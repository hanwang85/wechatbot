{"version":3,"sources":["../src/request.js"],"names":[],"mappings":"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","file":"request.js","sourcesContent":["'use strict'\nconst axios = require('axios')\nconst CM = require('cookie-manager')\nconst Pass = require('stream').PassThrough\n\nconst paramsSerializer = (params) => {\n  let qs = []\n  for (let key in params) {\n    qs.push(`${key}=${params[key]}`)\n  }\n  return encodeURI(qs.join('&'))\n}\n\nconst isBrowser = (typeof window !== 'undefined')\nconst isFunction = data => (typeof data === 'function')\n\nmodule.exports = function (defaults) {\n  defaults = defaults || {}\n  defaults.headers = defaults.headers || {}\n  if (!isBrowser) {\n    defaults.headers['user-agent'] = defaults.headers['user-agent'] || 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/48.0.2564.109 Safari/537.36'\n  }\n  defaults.paramsSerializer = defaults.paramsSerializer || paramsSerializer\n\n  this.axios = axios.create(defaults)\n  if (!isBrowser) {\n    this.cm = new CM()\n    this.axios.interceptors.request.use(config => {\n      config.headers['cookie'] = decodeURIComponent(this.cm.prepare(config.url))\n      return config\n    }, err => {\n      return Promise.reject(err)\n    })\n    this.axios.interceptors.response.use(res => {\n      let setCookie = res.headers['set-cookie']\n      if (setCookie) {\n        this.cm.store(res.config.url, setCookie)\n      }\n      return res\n    }, err => {\n      return Promise.reject(err)\n    })\n  }\n\n  this.request = (options) => {\n    return new Promise((resolve, reject) => {\n      if (options.data && isFunction(options.data.pipe)) {\n        let pass = new Pass()\n        let buf = []\n        if (isFunction(options.data.getHeaders)) {\n          options.headers = options.data.getHeaders(options.headers)\n        }\n        pass.on('data', chunk => {\n          buf.push(chunk)\n        })\n        pass.on('end', () => {\n          let arr = new Uint8Array(Buffer.concat(buf))\n          options.data = arr.buffer\n          resolve(options)\n        })\n        pass.on('error', err => {\n          reject(err)\n        })\n        options.data.pipe(pass)\n      } else {\n        resolve(options)\n      }\n    }).then(options => {\n      return this.axios.request(options)\n    })\n  }\n\n  return this.request\n}\n"]}