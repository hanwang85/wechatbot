{"version":3,"sources":["../src/wechat.js"],"names":[],"mappings":"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","file":"wechat.js","sourcesContent":["'use strict'\nconst EventEmitter = require('events')\nconst fs = require('fs')\nconst Request = require('./request.js')\nconst debug = require('debug')('wechat')\nconst FormData = require('form-data')\nconst mime = require('mime')\n\nconst updateAPI = require('./utils').updateAPI\nconst CONF = require('./utils').CONF\nconst convertEmoji = require('./utils').convertEmoji\nconst contentPrase = require('./utils').contentPrase\n\n// Private\nconst PROP = Symbol()\nconst API = Symbol()\n\nclass Wechat extends EventEmitter {\n\n  constructor () {\n    super()\n    this[PROP] = {\n      uuid: '',\n      uin: '',\n      sid: '',\n      skey: '',\n      passTicket: '',\n      formateSyncKey: '',\n      webwxDataTicket: '',\n      deviceId: 'e' + Math.random().toString().substring(2, 17),\n\n      baseRequest: {},\n      syncKey: {}\n    }\n\n    this[API] = {\n      jsLogin: 'https://login.weixin.qq.com/jslogin',\n      login: 'https://login.weixin.qq.com/cgi-bin/mmwebwx-bin/login'\n    }\n\n    this.syncErrorCount = 0\n    this.mediaSend = 0\n    this.state = CONF.STATE.init\n\n    this.user = [] // 登陆账号\n    this.memberList = [] // 所有联系人\n\n    this.contactList = [] // 个人联系人\n    this.groupList = [] // 已保存群聊\n    this.groupMemberList = [] // 所有群聊内联系人\n    this.publicList = [] // 公众账号\n    this.specialList = [] // 特殊账号\n\n    this.request = new Request()\n  }\n\n  setProp (key, val) {\n    this[PROP][key] = val\n  }\n\n  getProp (key) {\n    return this[PROP][key]\n  }\n\n  // 通讯录好友\n  get friendList () {\n    let members = []\n\n    this.groupList.forEach(member => {\n      members.push({\n        username: member['UserName'],\n        nickname: '群聊: ' + member['NickName'],\n        py: member['RemarkPYQuanPin'] ? member['RemarkPYQuanPin'] : member['PYQuanPin'],\n        avatar: this[API].baseUri.match(/http.*?\\/\\/.*?(?=\\/)/)[0] + member.HeadImgUrl\n      })\n    })\n\n    this.contactList.forEach(member => {\n      members.push({\n        username: member['UserName'],\n        nickname: member['RemarkName'] ? member['RemarkName'] : member['NickName'],\n        py: member['RemarkPYQuanPin'] ? member['RemarkPYQuanPin'] : member['PYQuanPin'],\n        avatar: this[API].baseUri.match(/http.*?\\/\\/.*?(?=\\/)/)[0] + member.HeadImgUrl\n      })\n    })\n\n    return members\n  }\n\n  getUUID () {\n    let params = {\n      'appid': 'wx782c26e4c19acffb',\n      'fun': 'new',\n      'lang': 'zh_CN'\n    }\n    return this.request({\n      method: 'POST',\n      url: this[API].jsLogin,\n      params: params\n    }).then(res => {\n      let pm = res.data.match(/window.QRLogin.code = (\\d+); window.QRLogin.uuid = \"(\\S+?)\"/)\n      if (!pm) {\n        throw new Error('UUID错误: 格式错误')\n      }\n      let code = +pm[1]\n      let uuid = this[PROP].uuid = pm[2]\n\n      if (code !== 200) {\n        throw new Error('UUID错误: ' + code)\n      }\n\n      this.emit('uuid', uuid)\n      this.state = CONF.STATE.uuid\n\n      return uuid\n    }).catch(err => {\n      debug(err)\n      throw new Error('获取UUID失败')\n    })\n  }\n\n  checkScan () {\n    debug('CheckScan')\n    let params = {\n      'tip': 1,\n      'uuid': this[PROP].uuid\n    }\n    return this.request({\n      method: 'GET',\n      url: this[API].login,\n      params: params\n    }).then(res => {\n      let pm = res.data.match(/window.code=(\\d+);/)\n      let code = +pm[1]\n\n      if (code !== 201) {\n        throw new Error('扫描状态code错误: ' + code)\n      }\n\n      this.emit('scan')\n    }).catch(err => {\n      debug(err)\n      throw new Error('获取扫描状态信息失败')\n    })\n  }\n\n  checkLogin () {\n    let params = {\n      'tip': 0,\n      'uuid': this[PROP].uuid\n    }\n    return this.request({\n      method: 'GET',\n      url: this[API].login,\n      params: params\n    }).then(res => {\n      let pm = res.data.match(/window.code=(\\d+);/)\n      let code = pm[1]\n\n      if (code !== '200') {\n        throw new Error('登陆确认code错误: ' + code)\n      }\n\n      pm = res.data.match(/window.redirect_uri=\"(\\S+?)\";/)\n      this[API].rediUri = pm[1] + '&fun=new'\n      this[API].baseUri = this[API].rediUri.substring(0, this[API].rediUri.lastIndexOf('/'))\n\n      // 接口更新\n      updateAPI(this[API])\n\n      this.emit('confirm')\n    }).catch(err => {\n      debug(err)\n      throw new Error('获取确认登录信息失败')\n    })\n  }\n\n  login () {\n    return this.request({\n      method: 'GET',\n      url: this[API].rediUri\n    }).then(res => {\n      this[PROP].skey = res.data.match(/<skey>(.*)<\\/skey>/)[1]\n      this[PROP].sid = res.data.match(/<wxsid>(.*)<\\/wxsid>/)[1]\n      this[PROP].uin = res.data.match(/<wxuin>(.*)<\\/wxuin>/)[1]\n      this[PROP].passTicket = res.data.match(/<pass_ticket>(.*)<\\/pass_ticket>/)[1]\n      if (res.headers['set-cookie']) {\n        res.headers['set-cookie'].forEach(item => {\n          if (item.indexOf('webwxDataTicket') !== -1) {\n            this[PROP].webwxDataTicket = item.split('; ').shift().split('=').pop()\n          }\n        })\n      }\n      this[PROP].baseRequest = {\n        'Uin': parseInt(this[PROP].uin, 10),\n        'Sid': this[PROP].sid,\n        'Skey': this[PROP].skey,\n        'DeviceID': this[PROP].deviceId\n      }\n    }).catch(err => {\n      debug(err)\n      throw new Error('登录失败')\n    })\n  }\n\n  init () {\n    let params = {\n      'pass_ticket': this[PROP].passTicket,\n      'skey': this[PROP].skey,\n      'r': +new Date()\n    }\n    let data = {\n      BaseRequest: this[PROP].baseRequest\n    }\n    return this.request({\n      method: 'POST',\n      url: this[API].webwxinit,\n      params: params,\n      data: data\n    }).then(res => {\n      let data = res.data\n      this.user = data['User']\n\n      this._updateSyncKey(data['SyncKey'])\n\n      if (data['BaseResponse']['Ret'] !== 0) {\n        throw new Error('微信初始化Ret错误' + data['BaseResponse']['Ret'])\n      }\n    }).catch(err => {\n      debug(err)\n      throw new Error('微信初始化失败')\n    })\n  }\n\n  notifyMobile () {\n    let data = {\n      'BaseRequest': this[PROP].baseRequest,\n      'Code': 3,\n      'FromUserName': this.user['UserName'],\n      'ToUserName': this.user['UserName'],\n      'ClientMsgId': +new Date()\n    }\n    return this.request({\n      method: 'POST',\n      url: this[API].webwxstatusnotify,\n      data: data\n    }).then(res => {\n      let data = res.data\n      if (data['BaseResponse']['Ret'] !== 0) {\n        throw new Error('开启状态通知Ret错误' + data['BaseResponse']['Ret'])\n      }\n    }).catch(err => {\n      debug(err)\n      throw new Error('开启状态通知失败')\n    })\n  }\n\n  getContact () {\n    let params = {\n      'lang': 'zh_CN',\n      'pass_ticket': this[PROP].passTicket,\n      'seq': 0,\n      'skey': this[PROP].skey,\n      'r': +new Date()\n    }\n    return this.request({\n      method: 'POST',\n      url: this[API].webwxgetcontact,\n      params: params\n    }).then(res => {\n      let data = res.data\n      this.memberList = data['MemberList']\n\n      if (this.memberList.length === 0) {\n        throw new Error('通讯录获取异常')\n      }\n\n      this.state = CONF.STATE.login\n      this.emit('login', this.memberList)\n\n      for (let member of this.memberList) {\n        member['NickName'] = convertEmoji(member['NickName'])\n        member['RemarkName'] = convertEmoji(member['RemarkName'])\n\n        if (member['VerifyFlag'] & 8) {\n          this.publicList.push(member)\n        } else if (CONF.SPECIALUSERS.indexOf(member['UserName']) > -1) {\n          this.specialList.push(member)\n        } else if (member['UserName'].indexOf('@@') > -1) {\n          this.groupList.push(member)\n        } else {\n          this.contactList.push(member)\n        }\n      }\n      debug('好友数量：' + this.memberList.length)\n      return this.memberList\n    }).catch(err => {\n      debug(err)\n      throw new Error('获取通讯录失败')\n    })\n  }\n\n  batchGetContact () {\n    let params = {\n      'pass_ticket': this[PROP].passTicket,\n      'type': 'e',\n      'r': +new Date()\n    }\n    let data = {\n      'BaseRequest': this[PROP].baseRequest,\n      'Count': this.groupList.length,\n      'List': this.groupList.map(member => {\n        return {\n          'UserName': member['UserName'],\n          'EncryChatRoomId': ''\n        }\n      })\n    }\n    return this.request({\n      method: 'POST',\n      url: this[API].webwxbatchgetcontact,\n      params: params,\n      data: data\n    }).then(res => {\n      let data = res.data\n      let contactList = data['ContactList']\n\n      for (let group of contactList) {\n        for (let member of group['MemberList']) {\n          this.groupMemberList.push(member)\n        }\n      }\n      debug('群组好友总数：', this.groupMemberList.length)\n      return this.groupMemberList\n    }).catch(err => {\n      debug(err)\n      throw new Error('获取群组通讯录失败')\n    })\n  }\n\n  syncPolling () {\n    this._syncCheck().then(state => {\n      if (state.retcode !== CONF.SYNCCHECK_RET_SUCCESS) {\n        throw new Error('你登出了微信')\n      } else {\n        if (state.selector !== CONF.SYNCCHECK_SELECTOR_NORMAL) {\n          return this._sync().then(data => {\n            setTimeout(() => {\n              this.syncPolling()\n            }, 1000)\n            this._handleMsg(data)\n          })\n        } else {\n          debug('WebSync Normal')\n          setTimeout(() => {\n            this.syncPolling()\n          }, 1000)\n        }\n      }\n    }).catch(err => {\n      if (++this.syncErrorCount > 3) {\n        debug(err)\n        this.emit('error', err)\n        this.logout()\n      } else {\n        setTimeout(() => {\n          this.syncPolling()\n        }, 1000)\n      }\n    })\n  }\n\n  logout () {\n    let params = {\n      redirect: 1,\n      type: 0,\n      skey: this[PROP].skey\n    }\n\n    // data加上会出错，不加data也能登出\n    // let data = {\n    //   sid: this[PROP].sid,\n    //   uin: this[PROP].uin\n    // }\n    return this.request({\n      method: 'POST',\n      url: this[API].webwxlogout,\n      params: params\n    }).then(res => {\n      this.state = CONF.STATE.logout\n      this.emit('logout')\n      return '登出成功'\n    }).catch(err => {\n      debug(err)\n      this.state = CONF.STATE.logout\n      this.emit('logout')\n      throw new Error('可能登出成功')\n    })\n  }\n\n  start () {\n    return Promise.resolve(this.state === CONF.STATE.uuid ? 0 : this.getUUID())\n      .then(() => this.checkScan())\n      .then(() => this.checkLogin())\n      .then(() => this.login())\n      .then(() => this.init())\n      .then(() => this.notifyMobile())\n      .then(() => this.getContact())\n      .then(() => this.batchGetContact())\n      .then(() => {\n        if (this.state !== CONF.STATE.login) {\n          throw new Error('登陆失败，未进入SyncPolling')\n        }\n        return this.syncPolling()\n      }).catch(err => {\n        debug('启动失败', err)\n        this.stop()\n        throw new Error('启动失败')\n      })\n  }\n\n  stop () {\n    return this.logout()\n  }\n\n  sendMsg (msg, to) {\n    let params = {\n      'pass_ticket': this[PROP].passTicket\n    }\n    let clientMsgId = +new Date() + '0' + Math.random().toString().substring(2, 5)\n    let data = {\n      'BaseRequest': this[PROP].baseRequest,\n      'Msg': {\n        'Type': 1,\n        'Content': msg,\n        'FromUserName': this.user['UserName'],\n        'ToUserName': to,\n        'LocalID': clientMsgId,\n        'ClientMsgId': clientMsgId\n      }\n    }\n    this.request({\n      method: 'POST',\n      url: this[API].webwxsendmsg,\n      params: params,\n      data: data\n    }).then(res => {\n      let data = res.data\n      if (data['BaseResponse']['Ret'] !== 0) {\n        throw new Error('发送信息Ret错误: ' + data['BaseResponse']['Ret'])\n      }\n    }).catch(err => {\n      debug(err)\n      throw new Error('发送信息失败')\n    })\n  }\n\n  sendImage (to, file, type, size) {\n    return this._uploadMedia(file, type, size)\n      .then(mediaId => this._sendImage(mediaId, to))\n      .catch(err => {\n        debug(err)\n        throw new Error('发送图片信息失败')\n      })\n  }\n\n  _syncCheck () {\n    let params = {\n      'r': +new Date(),\n      'sid': this[PROP].sid,\n      'uin': this[PROP].uin,\n      'skey': this[PROP].skey,\n      'deviceid': this[PROP].deviceId,\n      'synckey': this[PROP].formateSyncKey\n    }\n    return this.request({\n      method: 'GET',\n      url: this[API].synccheck,\n      params: params\n    }).then(res => {\n      let re = /window.synccheck={retcode:\"(\\d+)\",selector:\"(\\d+)\"}/\n      let pm = res.data.match(re)\n\n      let retcode = +pm[1]\n      let selector = +pm[2]\n\n      return {\n        retcode, selector\n      }\n    }).catch(err => {\n      debug(err)\n      throw new Error('同步失败')\n    })\n  }\n\n   _sync () {\n     let params = {\n       'sid': this[PROP].sid,\n       'skey': this[PROP].skey,\n       'pass_ticket': this[PROP].passTicket\n     }\n     let data = {\n       'BaseRequest': this[PROP].baseRequest,\n       'SyncKey': this[PROP].syncKey,\n       'rr': ~new Date()\n     }\n     return this.request({\n       method: 'POST',\n       url: this[API].webwxsync,\n       params: params,\n       data: data\n     }).then(res => {\n       let data = res.data\n       if (data['BaseResponse']['Ret'] !== 0) {\n         throw new Error('拉取消息Ret错误: ' + data['BaseResponse']['Ret'])\n       }\n\n       this._updateSyncKey(data['SyncKey'])\n       return data\n     }).catch(err => {\n       debug(err)\n       throw new Error('获取新信息失败')\n     })\n   }\n\n  _handleMsg (data) {\n    debug('Receive ', data['AddMsgList'].length, 'Message')\n\n    data['AddMsgList'].forEach((msg) => {\n      let type = +msg['MsgType']\n      let fromUser = this._getUserRemarkName(msg['FromUserName'])\n      let content = contentPrase(msg['Content'])\n\n      switch (type) {\n        case CONF.MSGTYPE_STATUSNOTIFY:\n          debug(' Message: Init')\n          this.emit('init-message')\n          break\n        case CONF.MSGTYPE_TEXT:\n          debug(' Text-Message: ', fromUser, ': ', content)\n          this.emit('text-message', msg)\n          break\n        case CONF.MSGTYPE_IMAGE:\n          debug(' Image-Message: ', fromUser, ': ', content)\n          this._getMsgImg(msg.MsgId).then(image => {\n            msg.Content = image\n            this.emit('image-message', msg)\n          })\n          break\n        case CONF.MSGTYPE_VOICE:\n          debug(' Voice-Message: ', fromUser, ': ', content)\n          this._getVoice(msg.MsgId).then(voice => {\n            msg.Content = voice\n            this.emit('voice-message', msg)\n          })\n          break\n        case CONF.MSGTYPE_EMOTICON:\n          debug(' Emoticon-Message: ', fromUser, ': ', content)\n          this._getEmoticon(content).then(emoticon => {\n            msg.Content = emoticon\n            this.emit('emoticon-message', msg)\n          })\n          break\n        case CONF.MSGTYPE_VERIFYMSG:\n          debug(' Message: Add Friend')\n          this.emit('verify-message', msg)\n          break\n      }\n    })\n  }\n\n  // file: Buffer, Stream, File, Blob\n  _uploadMedia (file, type, size) {\n    type = type || file.type || (file.path ? mime.lookup(file.path) : null) || ''\n    size = size || file.size || (file.path ? fs.statSync(file.path).size : null) || file.length || 0\n\n    let mediaId = this.mediaSend++\n    let clientMsgId = +new Date() + '0' + Math.random().toString().substring(2, 5)\n\n    let uploadMediaRequest = JSON.stringify({\n      BaseRequest: this[PROP].baseRequest,\n      ClientMediaId: clientMsgId,\n      TotalLen: size,\n      StartPos: 0,\n      DataLen: size,\n      MediaType: 4\n    })\n\n    let form = new FormData()\n    form.append('id', 'WU_FILE_' + mediaId)\n    form.append('name', 'filename')\n    form.append('type', type)\n    form.append('lastModifieDate', new Date().toGMTString())\n    form.append('size', size)\n    form.append('mediatype', 'pic')\n    form.append('uploadmediarequest', uploadMediaRequest)\n    form.append('webwx_data_ticket', this[PROP].webwxDataTicket)\n    form.append('pass_ticket', encodeURI(this[PROP].passTicket))\n    form.append('filename', file, {\n      filename: 'filename',\n      contentType: type,\n      knownLength: size\n    })\n\n    let params = {\n      f: 'json'\n    }\n\n    return this.request({\n      url: this[API].webwxuploadmedia,\n      method: 'POST',\n      params: params,\n      data: form\n    }).then(res => {\n      let mediaId = res.data.MediaId\n      if (!mediaId) {\n        throw new Error('MediaId获取失败')\n      }\n      return mediaId\n    }).catch(err => {\n      debug(err)\n      throw new Error('上传图片失败')\n    })\n  }\n\n  _sendImage (mediaId, to) {\n    let params = {\n      'pass_ticket': this[PROP].passTicket,\n      'fun': 'async',\n      'f': 'json'\n    }\n    let clientMsgId = +new Date() + '0' + Math.random().toString().substring(2, 5)\n    let data = {\n      'BaseRequest': this[PROP].baseRequest,\n      'Msg': {\n        'Type': 3,\n        'MediaId': mediaId,\n        'FromUserName': this.user['UserName'],\n        'ToUserName': to,\n        'LocalID': clientMsgId,\n        'ClientMsgId': clientMsgId\n      }\n    }\n    return this.request({\n      method: 'POST',\n      url: this[API].webwxsendmsgimg,\n      params: params,\n      data: data\n    }).then(res => {\n      let data = res.data\n      if (data['BaseResponse']['Ret'] !== 0) {\n        throw new Error('发送图片信息Ret错误: ' + data['BaseResponse']['Ret'])\n      }\n    }).catch(err => {\n      debug(err)\n      throw new Error('发送图片失败')\n    })\n  }\n\n  _getMsgImg (msgId) {\n    let params = {\n      MsgID: msgId,\n      skey: this[PROP].skey\n    }\n\n    return this.request({\n      method: 'GET',\n      url: this[API].webwxgetmsgimg,\n      params: params,\n      responseType: 'arraybuffer'\n    }).then(res => {\n      return {\n        data: res.data,\n        type: res.headers['content-type']\n      }\n    }).catch(err => {\n      debug(err)\n      throw new Error('获取图片失败')\n    })\n  }\n\n  _getVoice (msgId) {\n    let params = {\n      MsgID: msgId,\n      skey: this[PROP].skey\n    }\n\n    return this.request({\n      method: 'GET',\n      url: this[API].webwxgetvoice,\n      params: params,\n      responseType: 'arraybuffer'\n    }).then(res => {\n      return {\n        data: res.data,\n        type: res.headers['content-type']\n      }\n    }).catch(err => {\n      debug(err)\n      throw new Error('获取声音失败')\n    })\n  }\n\n  _getEmoticon (content) {\n    return Promise.resolve().then(() => {\n      return this.request({\n        method: 'GET',\n        url: content.match(/cdnurl=\"(.*?)\"/)[1],\n        responseType: 'arraybuffer'\n      })\n    }).then(res => {\n      return {\n        data: res.data,\n        type: res.headers['content-type'],\n        url: res.config.url\n      }\n    }).catch(err => {\n      debug(err)\n      throw new Error('获取表情失败')\n    })\n  }\n\n  _getHeadImg (member) {\n    let url = this[API].baseUri.match(/http.*?\\/\\/.*?(?=\\/)/)[0] + member.HeadImgUrl\n    return this.request({\n      method: 'GET',\n      url: url,\n      responseType: 'arraybuffer'\n    }).then(res => {\n      let headImg = {\n        data: res.data,\n        type: res.headers['content-type']\n      }\n      member.HeadImg = headImg\n      return headImg\n    }).catch(err => {\n      debug(err)\n      throw new Error('获取头像失败')\n    })\n  }\n\n  _getUserRemarkName (uid) {\n    for (let member of this.memberList) {\n      if (member['UserName'] === uid) {\n        return member['RemarkName'] ? member['RemarkName'] : member['NickName']\n      }\n    }\n    debug('不存在用户', uid)\n    return uid\n  }\n\n  _updateSyncKey (syncKey) {\n    this[PROP].syncKey = syncKey\n    let synckeylist = []\n    for (let e = this[PROP].syncKey['List'], o = 0, n = e.length; n > o; o++) {\n      synckeylist.push(e[o]['Key'] + '_' + e[o]['Val'])\n    }\n    this[PROP].formateSyncKey = synckeylist.join('|')\n  }\n}\n\nWechat.STATE = CONF.STATE\n\nexports = module.exports = Wechat\n"]}